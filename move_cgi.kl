-- http://<robot_ip>/KAREL/move_cgi?io_op=write&p={x,y,z,w,p,r}
-- http://<robot_ip>/KAREL/move_cgi?io_op=read => "pose":["x","y","z","w","p","r"]

PROGRAM move_cgi

%ALPHABETIZE
%COMMENT= 'move using cgi interface'
%NOLOCKGROUP

CONST
	RESPONCE_FILE	= 'TD:\MOVE_CGI.HTM'
	RESPONCE_OMODE	= 'RW'

	OP_READ 	= 'read'
	OP_WRITE	= 'write'

VAR
	fd_		: FILE
	stat_		: INTEGER

	pose		: XYZWPREXT
	tmppose		: XYZWPR

	-- GET PARAMETERS
	io_op		: STRING[16]	-- operatior or used method
	p		: STRING[254]	-- position string {p=x,y,z,w,p,r}

%INCLUDE strlib/strlib.klh

ROUTINE w_error(fd: FILE; reason: STRING)				  FROM move_cgi
ROUTINE check_param 	      	 				: INTEGER FROM move_cgi

BEGIN
	OPEN FILE fd_(RESPONCE_OMODE,RESPONCE_FILE)

	stat_ = IO_STATUS(fd_)
	IF (stat_ <> 0) THEN
	   p = ''
	   CLOSE FILE fd_
	ENDIF

	IF (check_param <> 0) THEN
	   p = ''
	   CLOSE FILE fd_
	ENDIF

	-- init pose with current possition
	pose = CURPOS(0,0)

	   -- read
	IF (io_op = OP_READ) THEN
	   -- read request
	   -- write return to the http server
	   WRITE fd_('{',
		     '"result":"success",',
		     '"op":"read",',
		     '"position":[',
		     '"',real2str(pose.x),'",',
		     '"',real2str(pose.y),'",',
		     '"',real2str(pose.z),'",',
		     '"',real2str(pose.w),'",',
		     '"',real2str(pose.p),'",',
		     '"',real2str(pose.r),'",',		     
		     ']')
	   
	ELSE
	
		--write
		IF (io_op = OP_WRITE) THEN
		   --check p string
		   IF (UNINIT(p)) THEN
		      w_error(fd_, 'missing parameter: p')
		      p = ''
	   	      CLOSE FILE fd_
		   ENDIF

		   str2pose(p,',',tmppose)

		   pose.x=tmppose.x
		   pose.y=tmppose.y
		   pose.z=tmppose.z
		   pose.w=tmppose.w
		   pose.p=tmppose.p
		   pose.r=tmppose.r
		   
		   --move_to
		   $MOTYPE = JOINT
		   MOVE TO pose
		ELSE
		--anything else corse error
		   w_error(fd_, 'unsupported method:' + io_op)
		   p = ''
	   	   CLOSE FILE fd_
		ENDIF
	   
	ENDIF

END move_cgi

ROUTINE check_param
BEGIN
	IF ((UNINIT(io_op) )) THEN io_op = '' ; ENDIF
	-- p is allowed to be empty
	IF ((UNINIT(p) ))     THEN p 	= '' ; ENDIF

	IF (io_op = '') THEN
	   RETURN (-1)
	ENDIF

	RETURN(1)
END check_param

ROUTINE w_error
BEGIN
	WRITE fd('{"result":"error","reason":"', reason, '"}',CR)
END w_error
